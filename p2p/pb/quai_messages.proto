syntax = "proto3";

import "p2p/pb/header.proto";

package quaiprotocol;
option go_package = "github.com/dominant-strategies/go-quai/p2p/pb";

// GossipSub messages for broadcasting blocks and transactions
message GossipBlock { Block block = 1; }

message GossipTransaction { Transaction transaction = 1; }

// QuaiRequestMessage is the main 'envelope' for QuaiProtocol request messages
message QuaiRequestMessage {
    Location location = 1;
    Hash hash = 2;
    oneof request {
        Block block = 3;
        Header header = 4;
        Transaction transaction = 5;
    }
}

// QuaiResponseMessage is the main 'envelope' for QuaiProtocol response messages
message QuaiResponseMessage {
    oneof response {
        Block block = 1;
        Header header = 2;
        Transaction transaction = 3;
    }
}

message Location {
    bytes location = 1;
}

// Hash structure
message Hash {
    bytes hash = 1; // Hash is an array of 32 bytes
}

// Block structure
message Block {
    Header header = 1;
    repeated Transaction txs = 2;
    repeated Header uncles = 3;
    repeated Transaction etxs = 4;
// TODO: add submanifest
// TODO: add receipts
// TODO: add hasher
    uint32 nodeCtx = 7;
    // Additional fields...
}

// Transaction structure
message Transaction {
    Hash hash = 1;
    string from = 2;
    string to = 3;
    uint64 nonce = 4;
    string value = 5;
    string gasPrice = 6;
    uint64 gas = 7;
    bytes input = 8;
    // Additional fields...
}
